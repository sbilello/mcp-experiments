{
  "swagger": "2.0",
  "info": {
    "title": "E-Commerce API",
    "description": "API for managing an e-commerce platform",
    "version": "1.0.0"
  },
  "host": "api.example.com",
  "basePath": "/v1",
  "schemes": ["https"],
  "paths": {
    "/products": {
      "get": {
        "summary": "Get all products",
        "description": "Returns a list of all products",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "description": "Creates a new product in the store",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "description": "Product object to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get a product by ID",
        "description": "Returns a single product",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to return",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "summary": "Update a product",
        "description": "Updates a product in the store",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to update",
            "required": true,
            "type": "integer"
          },
          {
            "name": "product",
            "in": "body",
            "description": "Updated product object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "description": "Deletes a product from the store",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Get all orders",
        "description": "Returns a list of all orders",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of orders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new order",
        "description": "Creates a new order in the system",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "description": "Order object to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "required": ["name", "price"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique identifier for the product"
        },
        "name": {
          "type": "string",
          "description": "Name of the product"
        },
        "description": {
          "type": "string",
          "description": "Description of the product"
        },
        "price": {
          "type": "number",
          "format": "float",
          "description": "Price of the product"
        },
        "category": {
          "type": "string",
          "description": "Category of the product"
        },
        "inventory": {
          "type": "integer",
          "description": "Available inventory of the product"
        }
      }
    },
    "Order": {
      "type": "object",
      "required": ["customer_id", "items"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique identifier for the order"
        },
        "customer_id": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the customer who placed the order"
        },
        "order_date": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the order was placed"
        },
        "status": {
          "type": "string",
          "description": "Status of the order",
          "enum": ["pending", "processing", "shipped", "delivered", "cancelled"]
        },
        "items": {
          "type": "array",
          "description": "List of items in the order",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "total_amount": {
          "type": "number",
          "format": "float",
          "description": "Total amount of the order"
        }
      }
    },
    "OrderItem": {
      "type": "object",
      "required": ["product_id", "quantity"],
      "properties": {
        "product_id": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the product"
        },
        "quantity": {
          "type": "integer",
          "description": "Quantity of the product"
        },
        "price": {
          "type": "number",
          "format": "float",
          "description": "Price of the product at the time of order"
        }
      }
    }
  }
}
